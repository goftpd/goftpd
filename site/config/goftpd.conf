# var allow you to set vars, vars cant be used within vars
var defaults *
var admin -io =admin

# path to where the authentication db will be stored
auth db site/config/auth.db

acl download 	/** 	$defaults
acl delete 		/** 	$defaults
acl deleteown	/** 	$defaults
acl upload 		/** 	$defaults
acl resume 		/** 	$defaults
acl resumeown	/** 	$defaults
acl rename 		/** 	$defaults
acl renameown	/** 	$defaults
acl showuser 	/**		$defaults
acl showgroup	/**		$defaults
acl makedir		/**		$defaults

acl private 	/private 		$admin
acl private 	/private/** 	$admin

# server settings
server sitename_short 	go
server sitename_long 	goftpd

# details on where we should listen for connections
server host				::
server port				2121

# range of passive ports allowed  to be used
server passive_ports	10000 20000

# used for data connections
server public_ip		127.0.0.1
server bind_ip			0.0.0.0

# run ./goftpd gencert --host ip,hostname,etc to generate
server tls_cert_file	site/config/cert.pem
server tls_key_file		site/config/key.pem

# fs settings
# -----------
fs rootpath			site/data

# optional path where shadow fs database will be kept
fs shadow_db		site/config/shadow.db

# default_* if user or group isnt found in shadowdb or 
# permissions are to hide user/group use this user/group
fs default_user		nobody
fs default_group	ohhai

# regexp. hide these from listing and prevent from being downloaded
fs hide (?i)\.(message)$

# script settings
# ---------------

# where to fine scripts for require within lua scripts, aka set LUA_PATH
script lua_path ;site/scripts/?.lua

# example script
script pre LIST trigger site/scripts/pre_list.lua *

# commands
# event commands are disabled for the time being
# script post "PASS" event site/scripts/post_pass.lua *

# glftpd commands
# scripts have to have an explicit match otherwise they fall through, this allows flags
# like 'self' and 'gadmin' to work. tl;dr always add !* if you want to default deny or use variables
# like here
var authorised -io =admin gadmin
var only_authorised -io =admin gadmin !*
var only_admin -io =admin !*

script command "SITE ADDUSER"	trigger site/scripts/site/adduser.lua 	$only_authorised
script command "SITE CHANGE"	trigger	site/scripts/site/change.lua	$only_authorised
script command "SITE USER"		trigger site/scripts/site/user.lua 	$authorised self
script command "SITE DELUSER"	trigger site/scripts/site/deluser.lua 	$authorised self
script command "SITE READD"	trigger site/scripts/site/readd.lua 	$authorised
script command "SITE ADDIP"		trigger site/scripts/site/addip.lua 	$only_authorised
script command "SITE DELIP"		trigger site/scripts/site/delip.lua 	$authorised self

script command "SITE GRPADD"	trigger	site/scripts/site/grpadd.lua	$only_admin
script command "SITE GRPCHANGE"	trigger	site/scripts/site/grpchange.lua	$only_admin
script command "SITE GRPDEL"	trigger	site/scripts/site/grpdel.lua	$only_admin
script command "SITE GROUPS"	trigger	site/scripts/site/groups.lua	$only_admin
script command "SITE CHGADMIN"	trigger	site/scripts/site/chgadmin.lua $only_admin
script command "SITE CHGRP"	trigger	site/scripts/site/chgrp.lua $only_admin
script command "SITE CHPGRP"	trigger	site/scripts/site/chpgrp.lua $only_admin

# post_check implemented in lua
script post "STOR" trigger site/scripts/post_check.lua *
